module Evergreen.Migrate.V7 exposing (..)

{-| This migration file was automatically generated by the lamdera compiler.

It includes:

  - A migration for each of the 6 Lamdera core types that has changed
  - A function named `migrate_ModuleName_TypeName` for each changed/custom type

Expect to see:

  - `Unimplement–µd` values as placeholders wherever I was unable to figure out a clear migration path for you
  - `@NOTICE` comments for things you should know about, i.e. new custom type constructors that won't get any
    value mappings from the old type by default

You can edit this file however you wish! It won't be generated again.

See <https://dashboard.lamdera.com/docs/evergreen> for more info.

-}

import Evergreen.V6.Types
import Evergreen.V6.User
import Evergreen.V7.Types
import Evergreen.V7.User
import Lamdera.Migrations exposing (..)
import List


frontendModel : Evergreen.V6.Types.FrontendModel -> ModelMigration Evergreen.V7.Types.FrontendModel Evergreen.V7.Types.FrontendMsg
frontendModel old =
    ModelUnchanged


backendModel : Evergreen.V6.Types.BackendModel -> ModelMigration Evergreen.V7.Types.BackendModel Evergreen.V7.Types.BackendMsg
backendModel old =
    ModelUnchanged


frontendMsg : Evergreen.V6.Types.FrontendMsg -> MsgMigration Evergreen.V7.Types.FrontendMsg Evergreen.V7.Types.FrontendMsg
frontendMsg old =
    MsgUnchanged


toBackend : Evergreen.V6.Types.ToBackend -> MsgMigration Evergreen.V7.Types.ToBackend Evergreen.V7.Types.BackendMsg
toBackend old =
    MsgUnchanged


backendMsg : Evergreen.V6.Types.BackendMsg -> MsgMigration Evergreen.V7.Types.BackendMsg Evergreen.V7.Types.BackendMsg
backendMsg old =
    MsgUnchanged


toFrontend : Evergreen.V6.Types.ToFrontend -> MsgMigration Evergreen.V7.Types.ToFrontend Evergreen.V7.Types.FrontendMsg
toFrontend old =
    MsgMigrated ( migrate_Types_ToFrontend old, Cmd.none )


migrate_Types_Book : Evergreen.V6.Types.Book -> Evergreen.V7.Types.Book
migrate_Types_Book old =
    { id = old.id
    , slug = old.slug
    , author = old.author
    , createdAt = old.createdAt
    , updatedAt = old.updatedAt
    , public = old.public
    , title = old.title
    , cells = old.cells |> List.map migrate_Types_Cell
    , currentIndex = old.currentIndex
    }


migrate_Types_Cell : Evergreen.V6.Types.Cell -> Evergreen.V7.Types.Cell
migrate_Types_Cell old =
    { index = old.index
    , text = old.text
    , value = old.value
    , cellState = old.cellState |> migrate_Types_CellState
    }


migrate_Types_CellState : Evergreen.V6.Types.CellState -> Evergreen.V7.Types.CellState
migrate_Types_CellState old =
    case old of
        Evergreen.V6.Types.CSEdit ->
            Evergreen.V7.Types.CSEdit

        Evergreen.V6.Types.CSView ->
            Evergreen.V7.Types.CSView


migrate_Types_Message : Evergreen.V6.Types.Message -> Evergreen.V7.Types.Message
migrate_Types_Message old =
    { txt = old.txt
    , status = old.status |> migrate_Types_MessageStatus
    }


migrate_Types_MessageStatus : Evergreen.V6.Types.MessageStatus -> Evergreen.V7.Types.MessageStatus
migrate_Types_MessageStatus old =
    case old of
        Evergreen.V6.Types.MSWhite ->
            Evergreen.V7.Types.MSWhite

        Evergreen.V6.Types.MSYellow ->
            Evergreen.V7.Types.MSYellow

        Evergreen.V6.Types.MSGreen ->
            Evergreen.V7.Types.MSGreen

        Evergreen.V6.Types.MSRed ->
            Evergreen.V7.Types.MSRed


migrate_Types_ToFrontend : Evergreen.V6.Types.ToFrontend -> Evergreen.V7.Types.ToFrontend
migrate_Types_ToFrontend old =
    case old of
        Evergreen.V6.Types.NoOpToFrontend ->
            Evergreen.V7.Types.NoOpToFrontend

        Evergreen.V6.Types.MessageReceived p0 ->
            Evergreen.V7.Types.MessageReceived (p0 |> migrate_Types_Message)

        Evergreen.V6.Types.GotUsers p0 ->
            Evergreen.V7.Types.GotUsers p0

        Evergreen.V6.Types.GotNotebook p0 ->
            Evergreen.V7.Types.GotNotebook (p0 |> migrate_Types_Book)

        Evergreen.V6.Types.SendMessage p0 ->
            Evergreen.V7.Types.SendMessage p0

        Evergreen.V6.Types.UserSignedIn p0 p1 ->
            Evergreen.V7.Types.UserSignedIn (p0 |> migrate_User_User) p1

        Evergreen.V6.Types.SendUser p0 ->
            Evergreen.V7.Types.SendUser (p0 |> migrate_User_User)


migrate_User_User : Evergreen.V6.User.User -> Evergreen.V7.User.User
migrate_User_User old =
    old
