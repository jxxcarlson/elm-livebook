module Evergreen.Migrate.V13 exposing (..)

{-| This migration file was automatically generated by the lamdera compiler.

It includes:

  - A migration for each of the 6 Lamdera core types that has changed
  - A function named `migrate_ModuleName_TypeName` for each changed/custom type

Expect to see:

  - `Unimplement–µd` values as placeholders wherever I was unable to figure out a clear migration path for you
  - `@NOTICE` comments for things you should know about, i.e. new custom type constructors that won't get any
    value mappings from the old type by default

You can edit this file however you wish! It won't be generated again.

See <https://dashboard.lamdera.com/docs/evergreen> for more info.

-}

import Evergreen.V13.LiveBook.DataSet
import Evergreen.V13.LiveBook.Types
import Evergreen.V13.Types
import Evergreen.V13.User
import Evergreen.V3.LiveBook.DataSet
import Evergreen.V3.Types
import Evergreen.V3.User
import Lamdera.Migrations exposing (..)
import List


frontendModel : Evergreen.V3.Types.FrontendModel -> ModelMigration Evergreen.V13.Types.FrontendModel Evergreen.V13.Types.FrontendMsg
frontendModel old =
    ModelUnchanged


backendModel : Evergreen.V3.Types.BackendModel -> ModelMigration Evergreen.V13.Types.BackendModel Evergreen.V13.Types.BackendMsg
backendModel old =
    ModelUnchanged


frontendMsg : Evergreen.V3.Types.FrontendMsg -> MsgMigration Evergreen.V13.Types.FrontendMsg Evergreen.V13.Types.FrontendMsg
frontendMsg old =
    MsgUnchanged


toBackend : Evergreen.V3.Types.ToBackend -> MsgMigration Evergreen.V13.Types.ToBackend Evergreen.V13.Types.BackendMsg
toBackend old =
    MsgMigrated ( migrate_Types_ToBackend old, Cmd.none )


backendMsg : Evergreen.V3.Types.BackendMsg -> MsgMigration Evergreen.V13.Types.BackendMsg Evergreen.V13.Types.BackendMsg
backendMsg old =
    MsgUnchanged


toFrontend : Evergreen.V3.Types.ToFrontend -> MsgMigration Evergreen.V13.Types.ToFrontend Evergreen.V13.Types.FrontendMsg
toFrontend old =
    MsgMigrated ( migrate_Types_ToFrontend old, Cmd.none )


migrate_LiveBook_DataSet_DataSet : Evergreen.V3.LiveBook.DataSet.DataSet -> Evergreen.V13.LiveBook.DataSet.DataSet
migrate_LiveBook_DataSet_DataSet old =
    old


migrate_LiveBook_Types_Book : Evergreen.V3.Types.Book -> Evergreen.V13.LiveBook.Types.Book
migrate_LiveBook_Types_Book old =
    { id = old.id
    , dirty = old.dirty
    , slug = old.slug
    , origin = old.origin
    , author = old.author
    , createdAt = old.createdAt
    , updatedAt = old.updatedAt
    , public = old.public
    , title = old.title
    , cells = old.cells |> List.map migrate_LiveBook_Types_Cell
    , currentIndex = old.currentIndex
    }


migrate_LiveBook_Types_Cell : Evergreen.V3.Types.Cell -> Evergreen.V13.LiveBook.Types.Cell
migrate_LiveBook_Types_Cell old =
    { index = old.index
    , text = old.text
    , value = old.value |> migrate_LiveBook_Types_CellValue
    , cellState = old.cellState |> migrate_LiveBook_Types_CellState
    }


migrate_LiveBook_Types_CellState : Evergreen.V3.Types.CellState -> Evergreen.V13.LiveBook.Types.CellState
migrate_LiveBook_Types_CellState old =
    case old of
        Evergreen.V3.Types.CSEdit ->
            Evergreen.V13.LiveBook.Types.CSEdit

        Evergreen.V3.Types.CSView ->
            Evergreen.V13.LiveBook.Types.CSView


migrate_LiveBook_Types_CellValue : Evergreen.V3.Types.CellValue -> Evergreen.V13.LiveBook.Types.CellValue
migrate_LiveBook_Types_CellValue old =
    case old of
        Evergreen.V3.Types.CVNone ->
            Evergreen.V13.LiveBook.Types.CVNone

        Evergreen.V3.Types.CVString p0 ->
            Evergreen.V13.LiveBook.Types.CVString p0

        Evergreen.V3.Types.CVVisual p0 p1 ->
            Evergreen.V13.LiveBook.Types.CVVisual (p0 |> migrate_LiveBook_Types_VisualType) p1


migrate_LiveBook_Types_VisualType : Evergreen.V3.Types.VisualType -> Evergreen.V13.LiveBook.Types.VisualType
migrate_LiveBook_Types_VisualType old =
    case old of
        Evergreen.V3.Types.VTChart ->
            Evergreen.V13.LiveBook.Types.VTChart

        Evergreen.V3.Types.VTImage ->
            Evergreen.V13.LiveBook.Types.VTImage


migrate_Types_Message : Evergreen.V3.Types.Message -> Evergreen.V13.Types.Message
migrate_Types_Message old =
    { txt = old.txt
    , status = old.status |> migrate_Types_MessageStatus
    }


migrate_Types_MessageStatus : Evergreen.V3.Types.MessageStatus -> Evergreen.V13.Types.MessageStatus
migrate_Types_MessageStatus old =
    case old of
        Evergreen.V3.Types.MSWhite ->
            Evergreen.V13.Types.MSWhite

        Evergreen.V3.Types.MSYellow ->
            Evergreen.V13.Types.MSYellow

        Evergreen.V3.Types.MSGreen ->
            Evergreen.V13.Types.MSGreen

        Evergreen.V3.Types.MSRed ->
            Evergreen.V13.Types.MSRed


migrate_Types_ToBackend : Evergreen.V3.Types.ToBackend -> Evergreen.V13.Types.ToBackend
migrate_Types_ToBackend old =
    case old of
        Evergreen.V3.Types.NoOpToBackend ->
            Evergreen.V13.Types.NoOpToBackend

        Evergreen.V3.Types.RunTask ->
            Evergreen.V13.Types.RunTask

        Evergreen.V3.Types.SendUsers ->
            Evergreen.V13.Types.SendUsers

        Evergreen.V3.Types.CreateDataSet p0 ->
            Evergreen.V13.Types.CreateDataSet (p0 |> migrate_LiveBook_DataSet_DataSet)

        Evergreen.V3.Types.GetData p0 p1 p2 ->
            Evergreen.V13.Types.GetData p0 p1 p2

        Evergreen.V3.Types.CreateNotebook p0 p1 ->
            Evergreen.V13.Types.CreateNotebook p0 p1

        Evergreen.V3.Types.SaveNotebook p0 ->
            Evergreen.V13.Types.SaveNotebook (p0 |> migrate_LiveBook_Types_Book)

        Evergreen.V3.Types.DeleteNotebook p0 ->
            Evergreen.V13.Types.DeleteNotebook (p0 |> migrate_LiveBook_Types_Book)

        Evergreen.V3.Types.GetClonedNotebook p0 p1 ->
            Evergreen.V13.Types.GetClonedNotebook p0 p1

        Evergreen.V3.Types.GetPulledNotebook p0 p1 p2 p3 ->
            Evergreen.V13.Types.GetPulledNotebook p0 p1 p2 p3

        Evergreen.V3.Types.UpdateSlugDict p0 ->
            Evergreen.V13.Types.UpdateSlugDict (p0 |> migrate_LiveBook_Types_Book)

        Evergreen.V3.Types.GetUsersNotebooks p0 ->
            Evergreen.V13.Types.GetUsersNotebooks p0

        Evergreen.V3.Types.GetPublicNotebooks p0 ->
            Evergreen.V13.Types.GetPublicNotebooks p0

        Evergreen.V3.Types.SignUpBE p0 p1 p2 ->
            Evergreen.V13.Types.SignUpBE p0 p1 p2

        Evergreen.V3.Types.SignInBEDev ->
            Evergreen.V13.Types.SignInBEDev

        Evergreen.V3.Types.SignInBE p0 p1 ->
            Evergreen.V13.Types.SignInBE p0 p1

        Evergreen.V3.Types.SignOutBE p0 ->
            Evergreen.V13.Types.SignOutBE p0

        Evergreen.V3.Types.UpdateUserWith p0 ->
            Evergreen.V13.Types.UpdateUserWith (p0 |> migrate_User_User)


migrate_Types_ToFrontend : Evergreen.V3.Types.ToFrontend -> Evergreen.V13.Types.ToFrontend
migrate_Types_ToFrontend old =
    case old of
        Evergreen.V3.Types.NoOpToFrontend ->
            Evergreen.V13.Types.NoOpToFrontend

        Evergreen.V3.Types.MessageReceived p0 ->
            Evergreen.V13.Types.MessageReceived (p0 |> migrate_Types_Message)

        Evergreen.V3.Types.GotUsers p0 ->
            Evergreen.V13.Types.GotUsers p0

        Evergreen.V3.Types.GotData p0 p1 p2 ->
            Evergreen.V13.Types.GotData p0 p1 (p2 |> migrate_LiveBook_DataSet_DataSet)

        Evergreen.V3.Types.GotNotebook p0 ->
            Evergreen.V13.Types.GotNotebook (p0 |> migrate_LiveBook_Types_Book)

        Evergreen.V3.Types.GotNotebooks p0 ->
            Evergreen.V13.Types.GotNotebooks (p0 |> List.map migrate_LiveBook_Types_Book)

        Evergreen.V3.Types.SendMessage p0 ->
            Evergreen.V13.Types.SendMessage p0

        Evergreen.V3.Types.UserSignedIn p0 p1 ->
            Evergreen.V13.Types.UserSignedIn (p0 |> migrate_User_User) p1

        Evergreen.V3.Types.SendUser p0 ->
            Evergreen.V13.Types.SendUser (p0 |> migrate_User_User)


migrate_User_User : Evergreen.V3.User.User -> Evergreen.V13.User.User
migrate_User_User old =
    old
