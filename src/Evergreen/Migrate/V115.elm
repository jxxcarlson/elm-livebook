module Evergreen.Migrate.V115 exposing (..)

{-| This migration file was automatically generated by the lamdera compiler.

It includes:

  - A migration for each of the 6 Lamdera core types that has changed
  - A function named `migrate_ModuleName_TypeName` for each changed/custom type

Expect to see:

  - `Unimplement–µd` values as placeholders wherever I was unable to figure out a clear migration path for you
  - `@NOTICE` comments for things you should know about, i.e. new custom type constructors that won't get any
    value mappings from the old type by default

You can edit this file however you wish! It won't be generated again.

See <https://dashboard.lamdera.com/docs/evergreen> for more info.

-}

import Array
import Dict
import Evergreen.V114.Authentication
import Evergreen.V114.Credentials
import Evergreen.V114.FastDict
import Evergreen.V114.Internal
import Evergreen.V114.LiveBook.DataSet
import Evergreen.V114.LiveBook.State
import Evergreen.V114.LiveBook.Types
import Evergreen.V114.Types
import Evergreen.V114.User
import Evergreen.V114.Value
import Evergreen.V115.Authentication
import Evergreen.V115.Credentials
import Evergreen.V115.FastDict
import Evergreen.V115.Internal
import Evergreen.V115.LiveBook.DataSet
import Evergreen.V115.LiveBook.State
import Evergreen.V115.LiveBook.Types
import Evergreen.V115.Types
import Evergreen.V115.User
import Evergreen.V115.Value
import Lamdera.Migrations exposing (..)
import List


frontendModel : Evergreen.V114.Types.FrontendModel -> ModelMigration Evergreen.V115.Types.FrontendModel Evergreen.V115.Types.FrontendMsg
frontendModel old =
    ModelMigrated ( migrate_Types_FrontendModel old, Cmd.none )


backendModel : Evergreen.V114.Types.BackendModel -> ModelMigration Evergreen.V115.Types.BackendModel Evergreen.V115.Types.BackendMsg
backendModel old =
    ModelMigrated ( migrate_Types_BackendModel old, Cmd.none )


frontendMsg : Evergreen.V114.Types.FrontendMsg -> MsgMigration Evergreen.V115.Types.FrontendMsg Evergreen.V115.Types.FrontendMsg
frontendMsg old =
    MsgMigrated ( migrate_Types_FrontendMsg old, Cmd.none )


toBackend : Evergreen.V114.Types.ToBackend -> MsgMigration Evergreen.V115.Types.ToBackend Evergreen.V115.Types.BackendMsg
toBackend old =
    MsgMigrated ( migrate_Types_ToBackend old, Cmd.none )


backendMsg : Evergreen.V114.Types.BackendMsg -> MsgMigration Evergreen.V115.Types.BackendMsg Evergreen.V115.Types.BackendMsg
backendMsg old =
    MsgUnchanged


toFrontend : Evergreen.V114.Types.ToFrontend -> MsgMigration Evergreen.V115.Types.ToFrontend Evergreen.V115.Types.FrontendMsg
toFrontend old =
    MsgMigrated ( migrate_Types_ToFrontend old, Cmd.none )


migrate_Types_BackendModel : Evergreen.V114.Types.BackendModel -> Evergreen.V115.Types.BackendModel
migrate_Types_BackendModel old =
    { message = old.message
    , currentTime = old.currentTime
    , randomSeed = old.randomSeed
    , uuidCount = old.uuidCount
    , uuid = old.uuid
    , randomAtmosphericInt = old.randomAtmosphericInt
    , dataSetLibrary = old.dataSetLibrary
    , userToNoteBookDict = old.userToNoteBookDict |> migrate_Types_UserToNoteBookDict
    , slugDict = old.slugDict
    , authenticationDict = old.authenticationDict |> migrate_Authentication_AuthenticationDict
    }


migrate_Types_FrontendModel : Evergreen.V114.Types.FrontendModel -> Evergreen.V115.Types.FrontendModel
migrate_Types_FrontendModel old =
    { key = old.key
    , url = old.url
    , message = old.message
    , messages = old.messages |> List.map migrate_Types_Message
    , appState = old.appState |> migrate_Types_AppState
    , appMode = old.appMode |> migrate_Types_AppMode
    , currentTime = old.currentTime
    , tickCount = old.tickCount
    , fastTickInterval = old.fastTickInterval
    , clockState = old.clockState |> migrate_Types_ClockState
    , pressedKeys = old.pressedKeys
    , randomSeed = old.randomSeed
    , randomProbabilities = old.randomProbabilities
    , probabilityVectorLength = old.probabilityVectorLength
    , users = old.users
    , inputName = old.inputName
    , inputIdentifier = old.inputIdentifier
    , inputAuthor = old.inputAuthor
    , inputDescription = old.inputDescription
    , inputComments = old.inputComments
    , inputData = old.inputData
    , inputInitialStateValue = old.inputInitialStateValue
    , inputFastTickInterval = old.inputFastTickInterval
    , inputStateExpression = old.inputStateExpression
    , inputStateBindings = old.inputStateBindings
    , inputStopExpression = old.inputStopExpression
    , inputValuesToKeep = ""
    , publicDataSetMetaDataList = old.publicDataSetMetaDataList
    , privateDataSetMetaDataList = old.privateDataSetMetaDataList
    , kvDict = old.kvDict
    , books = old.books |> List.map migrate_LiveBook_Types_Book
    , currentBook = old.currentBook |> migrate_LiveBook_Types_Book
    , cellContent = old.cellContent
    , currentCellIndex = old.currentCellIndex
    , cloneReference = old.cloneReference
    , deleteNotebookState = old.deleteNotebookState |> migrate_Types_DeleteNotebookState
    , showNotebooks = old.showNotebooks |> migrate_Types_ShowNotebooks
    , valueDict = old.valueDict |> Dict.map (\k -> migrate_Value_Value)
    , nextStateRecord = old.nextStateRecord
    , state = old.state |> migrate_LiveBook_State_MState
    , svgList = old.svgList
    , valuesToKeep = 1000
    , signupState = old.signupState |> migrate_Types_SignupState
    , currentUser = old.currentUser
    , inputUsername = old.inputUsername
    , inputSignupUsername = old.inputSignupUsername
    , inputEmail = old.inputEmail
    , inputRealname = old.inputRealname
    , inputPassword = old.inputPassword
    , inputPasswordAgain = old.inputPasswordAgain
    , inputTitle = old.inputTitle
    , windowWidth = old.windowWidth
    , windowHeight = old.windowHeight
    , popupState = old.popupState |> migrate_Types_PopupState
    , showEditor = old.showEditor
    }


migrate_Authentication_AuthenticationDict : Evergreen.V114.Authentication.AuthenticationDict -> Evergreen.V115.Authentication.AuthenticationDict
migrate_Authentication_AuthenticationDict old =
    old |> Dict.map (\k -> migrate_Authentication_UserData)


migrate_Authentication_UserData : Evergreen.V114.Authentication.UserData -> Evergreen.V115.Authentication.UserData
migrate_Authentication_UserData old =
    { user = old.user |> migrate_User_User
    , credentials = old.credentials |> migrate_Credentials_Credentials
    }


migrate_Credentials_Credentials : Evergreen.V114.Credentials.Credentials -> Evergreen.V115.Credentials.Credentials
migrate_Credentials_Credentials old =
    case old of
        Evergreen.V114.Credentials.V1 p0 p1 ->
            Evergreen.V115.Credentials.V1 p0 p1


migrate_FastDict_Dict : (k_old -> k_new) -> (v_old -> v_new) -> Evergreen.V114.FastDict.Dict k_old v_old -> Evergreen.V115.FastDict.Dict k_new v_new
migrate_FastDict_Dict migrate_k migrate_v old =
    old |> migrate_Internal_InternalDict migrate_k migrate_v


migrate_Internal_InnerDict : (k_old -> k_new) -> (v_old -> v_new) -> Evergreen.V114.Internal.InnerDict k_old v_old -> Evergreen.V115.Internal.InnerDict k_new v_new
migrate_Internal_InnerDict migrate_k migrate_v old =
    case old of
        Evergreen.V114.Internal.InnerNode p0 p1 p2 p3 p4 ->
            Evergreen.V115.Internal.InnerNode (p0 |> migrate_Internal_NColor)
                (p1 |> migrate_k)
                (p2 |> migrate_v)
                (p3 |> migrate_Internal_InnerDict migrate_k migrate_v)
                (p4 |> migrate_Internal_InnerDict migrate_k migrate_v)

        Evergreen.V114.Internal.Leaf ->
            Evergreen.V115.Internal.Leaf


migrate_Internal_InternalDict : (k_old -> k_new) -> (v_old -> v_new) -> Evergreen.V114.Internal.InternalDict k_old v_old -> Evergreen.V115.Internal.InternalDict k_new v_new
migrate_Internal_InternalDict migrate_k migrate_v old =
    case old of
        Evergreen.V114.Internal.Dict p0 p1 ->
            Evergreen.V115.Internal.Dict p0
                (p1 |> migrate_Internal_InnerDict migrate_k migrate_v)


migrate_Internal_NColor : Evergreen.V114.Internal.NColor -> Evergreen.V115.Internal.NColor
migrate_Internal_NColor old =
    case old of
        Evergreen.V114.Internal.Red ->
            Evergreen.V115.Internal.Red

        Evergreen.V114.Internal.Black ->
            Evergreen.V115.Internal.Black


migrate_LiveBook_DataSet_DataSet : Evergreen.V114.LiveBook.DataSet.DataSet -> Evergreen.V115.LiveBook.DataSet.DataSet
migrate_LiveBook_DataSet_DataSet old =
    old


migrate_LiveBook_DataSet_DataSetMetaData : Evergreen.V114.LiveBook.DataSet.DataSetMetaData -> Evergreen.V115.LiveBook.DataSet.DataSetMetaData
migrate_LiveBook_DataSet_DataSetMetaData old =
    old


migrate_LiveBook_State_MState : Evergreen.V114.LiveBook.State.MState -> Evergreen.V115.LiveBook.State.MState
migrate_LiveBook_State_MState old =
    { currentValue = old.currentValue |> migrate_Value_Value
    , values = old.values |> List.map migrate_Value_Value
    , initialValue = old.initialValue |> migrate_Value_Value
    , valuesToKeep = 1000
    , probabilities = old.probabilities
    , ticks = old.ticks
    , expression = old.expression
    , bindings = old.bindings
    , fastTickInterval = old.fastTickInterval
    , stopExpressionString = old.stopExpressionString
    }


migrate_LiveBook_Types_Book : Evergreen.V114.LiveBook.Types.Book -> Evergreen.V115.LiveBook.Types.Book
migrate_LiveBook_Types_Book old =
    { id = old.id
    , dirty = old.dirty
    , slug = old.slug
    , origin = old.origin
    , author = old.author
    , createdAt = old.createdAt
    , updatedAt = old.updatedAt
    , public = old.public
    , title = old.title
    , cells = old.cells |> List.map migrate_LiveBook_Types_Cell
    , currentIndex = old.currentIndex
    , initialStateString = old.initialStateString
    , stateExpression = old.stateExpression
    , stateBindings = old.stateBindings
    , fastTickInterval = old.fastTickInterval
    , stopExpressionString = old.stopExpressionString
    , valuesToKeep = 1000
    }


migrate_LiveBook_Types_Cell : Evergreen.V114.LiveBook.Types.Cell -> Evergreen.V115.LiveBook.Types.Cell
migrate_LiveBook_Types_Cell old =
    { index = old.index
    , text = old.text
    , bindings = old.bindings
    , expression = old.expression
    , value = old.value |> migrate_LiveBook_Types_CellValue
    , cellState = old.cellState |> migrate_LiveBook_Types_CellState
    , locked = old.locked
    }


migrate_LiveBook_Types_CellState : Evergreen.V114.LiveBook.Types.CellState -> Evergreen.V115.LiveBook.Types.CellState
migrate_LiveBook_Types_CellState old =
    case old of
        Evergreen.V114.LiveBook.Types.CSEdit ->
            Evergreen.V115.LiveBook.Types.CSEdit

        Evergreen.V114.LiveBook.Types.CSView ->
            Evergreen.V115.LiveBook.Types.CSView


migrate_LiveBook_Types_CellValue : Evergreen.V114.LiveBook.Types.CellValue -> Evergreen.V115.LiveBook.Types.CellValue
migrate_LiveBook_Types_CellValue old =
    case old of
        Evergreen.V114.LiveBook.Types.CVNone ->
            Evergreen.V115.LiveBook.Types.CVNone

        Evergreen.V114.LiveBook.Types.CVString p0 ->
            Evergreen.V115.LiveBook.Types.CVString p0

        Evergreen.V114.LiveBook.Types.CVVisual p0 p1 ->
            Evergreen.V115.LiveBook.Types.CVVisual (p0 |> migrate_LiveBook_Types_VisualType) p1

        Evergreen.V114.LiveBook.Types.CVPlot2D p0 p1 ->
            Evergreen.V115.LiveBook.Types.CVPlot2D p0 p1


migrate_LiveBook_Types_VisualType : Evergreen.V114.LiveBook.Types.VisualType -> Evergreen.V115.LiveBook.Types.VisualType
migrate_LiveBook_Types_VisualType old =
    case old of
        Evergreen.V114.LiveBook.Types.VTChart ->
            Evergreen.V115.LiveBook.Types.VTChart

        Evergreen.V114.LiveBook.Types.VTSvg ->
            Evergreen.V115.LiveBook.Types.VTSvg

        Evergreen.V114.LiveBook.Types.VTImage ->
            Evergreen.V115.LiveBook.Types.VTImage


migrate_Types_AppMode : Evergreen.V114.Types.AppMode -> Evergreen.V115.Types.AppMode
migrate_Types_AppMode old =
    case old of
        Evergreen.V114.Types.AMWorking ->
            Evergreen.V115.Types.AMWorking

        Evergreen.V114.Types.AMEditTitle ->
            Evergreen.V115.Types.AMEditTitle


migrate_Types_AppState : Evergreen.V114.Types.AppState -> Evergreen.V115.Types.AppState
migrate_Types_AppState old =
    case old of
        Evergreen.V114.Types.Loading ->
            Evergreen.V115.Types.Loading

        Evergreen.V114.Types.Loaded ->
            Evergreen.V115.Types.Loaded


migrate_Types_ClockState : Evergreen.V114.Types.ClockState -> Evergreen.V115.Types.ClockState
migrate_Types_ClockState old =
    case old of
        Evergreen.V114.Types.ClockRunning ->
            Evergreen.V115.Types.ClockRunning

        Evergreen.V114.Types.ClockStopped ->
            Evergreen.V115.Types.ClockStopped

        Evergreen.V114.Types.ClockPaused ->
            Evergreen.V115.Types.ClockPaused


migrate_Types_DataSetDescription : Evergreen.V114.Types.DataSetDescription -> Evergreen.V115.Types.DataSetDescription
migrate_Types_DataSetDescription old =
    case old of
        Evergreen.V114.Types.PublicDatasets ->
            Evergreen.V115.Types.PublicDatasets

        Evergreen.V114.Types.UserDatasets p0 ->
            Evergreen.V115.Types.UserDatasets p0


migrate_Types_DeleteNotebookState : Evergreen.V114.Types.DeleteNotebookState -> Evergreen.V115.Types.DeleteNotebookState
migrate_Types_DeleteNotebookState old =
    case old of
        Evergreen.V114.Types.WaitingToDeleteNotebook ->
            Evergreen.V115.Types.WaitingToDeleteNotebook

        Evergreen.V114.Types.CanDeleteNotebook ->
            Evergreen.V115.Types.CanDeleteNotebook


migrate_Types_FrontendMsg : Evergreen.V114.Types.FrontendMsg -> Evergreen.V115.Types.FrontendMsg
migrate_Types_FrontendMsg old =
    case old of
        Evergreen.V114.Types.UrlClicked p0 ->
            Evergreen.V115.Types.UrlClicked p0

        Evergreen.V114.Types.UrlChanged p0 ->
            Evergreen.V115.Types.UrlChanged p0

        Evergreen.V114.Types.NoOpFrontendMsg ->
            Evergreen.V115.Types.NoOpFrontendMsg

        Evergreen.V114.Types.FETick p0 ->
            Evergreen.V115.Types.FETick p0

        Evergreen.V114.Types.FastTick p0 ->
            Evergreen.V115.Types.FastTick p0

        Evergreen.V114.Types.KeyboardMsg p0 ->
            Evergreen.V115.Types.KeyboardMsg p0

        Evergreen.V114.Types.GetRandomProbabilities p0 ->
            Evergreen.V115.Types.GetRandomProbabilities p0

        Evergreen.V114.Types.GotRandomProbabilities p0 ->
            Evergreen.V115.Types.GotRandomProbabilities p0

        Evergreen.V114.Types.StringDataRequested p0 p1 ->
            Evergreen.V115.Types.StringDataRequested p0 p1

        Evergreen.V114.Types.StringDataSelected p0 p1 p2 ->
            Evergreen.V115.Types.StringDataSelected p0 p1 p2

        Evergreen.V114.Types.StringDataLoaded p0 p1 p2 p3 ->
            Evergreen.V115.Types.StringDataLoaded p0 p1 p2 p3

        Evergreen.V114.Types.InputName p0 ->
            Evergreen.V115.Types.InputName p0

        Evergreen.V114.Types.InputIdentifier p0 ->
            Evergreen.V115.Types.InputIdentifier p0

        Evergreen.V114.Types.InputDescription p0 ->
            Evergreen.V115.Types.InputDescription p0

        Evergreen.V114.Types.InputComments p0 ->
            Evergreen.V115.Types.InputComments p0

        Evergreen.V114.Types.InputData p0 ->
            Evergreen.V115.Types.InputData p0

        Evergreen.V114.Types.InputAuthor p0 ->
            Evergreen.V115.Types.InputAuthor p0

        Evergreen.V114.Types.InputInitialStateValue p0 ->
            Evergreen.V115.Types.InputInitialStateValue p0

        Evergreen.V114.Types.InputFastTickInterval p0 ->
            Evergreen.V115.Types.InputFastTickInterval p0

        Evergreen.V114.Types.InputStateExpression p0 ->
            Evergreen.V115.Types.InputStateExpression p0

        Evergreen.V114.Types.InputStateBindings p0 ->
            Evergreen.V115.Types.InputStateBindings p0

        Evergreen.V114.Types.InputStopExpression p0 ->
            Evergreen.V115.Types.InputStopExpression p0

        Evergreen.V114.Types.AskToListDataSets p0 ->
            Evergreen.V115.Types.AskToListDataSets (p0 |> migrate_Types_DataSetDescription)

        Evergreen.V114.Types.AskToSaveDataSet p0 ->
            Evergreen.V115.Types.AskToSaveDataSet (p0 |> migrate_LiveBook_DataSet_DataSetMetaData)

        Evergreen.V114.Types.AskToCreateDataSet ->
            Evergreen.V115.Types.AskToCreateDataSet

        Evergreen.V114.Types.AskToDeleteDataSet p0 ->
            Evergreen.V115.Types.AskToDeleteDataSet (p0 |> migrate_LiveBook_DataSet_DataSetMetaData)

        Evergreen.V114.Types.ToggleCellLock p0 ->
            Evergreen.V115.Types.ToggleCellLock (p0 |> migrate_LiveBook_Types_Cell)

        Evergreen.V114.Types.NewCell p0 ->
            Evergreen.V115.Types.NewCell p0

        Evergreen.V114.Types.DeleteCell p0 ->
            Evergreen.V115.Types.DeleteCell p0

        Evergreen.V114.Types.EditCell p0 ->
            Evergreen.V115.Types.EditCell (p0 |> migrate_LiveBook_Types_Cell)

        Evergreen.V114.Types.ClearCell p0 ->
            Evergreen.V115.Types.ClearCell p0

        Evergreen.V114.Types.EvalCell p0 ->
            Evergreen.V115.Types.EvalCell p0

        Evergreen.V114.Types.InputElmCode p0 p1 ->
            Evergreen.V115.Types.InputElmCode p0 p1

        Evergreen.V114.Types.UpdateNotebookTitle ->
            Evergreen.V115.Types.UpdateNotebookTitle

        Evergreen.V114.Types.NewNotebook ->
            Evergreen.V115.Types.NewNotebook

        Evergreen.V114.Types.ProposeDeletingNotebook ->
            Evergreen.V115.Types.ProposeDeletingNotebook

        Evergreen.V114.Types.CancelDeleteNotebook ->
            Evergreen.V115.Types.CancelDeleteNotebook

        Evergreen.V114.Types.ChangeAppMode p0 ->
            Evergreen.V115.Types.ChangeAppMode (p0 |> migrate_Types_AppMode)

        Evergreen.V114.Types.SetClock p0 ->
            Evergreen.V115.Types.SetClock (p0 |> migrate_Types_ClockState)

        Evergreen.V114.Types.SetState ->
            Evergreen.V115.Types.SetState

        Evergreen.V114.Types.Reset ->
            Evergreen.V115.Types.Reset

        Evergreen.V114.Types.TogglePublic ->
            Evergreen.V115.Types.TogglePublic

        Evergreen.V114.Types.ClearNotebookValues ->
            Evergreen.V115.Types.ClearNotebookValues

        Evergreen.V114.Types.SetCurrentNotebook p0 ->
            Evergreen.V115.Types.SetCurrentNotebook (p0 |> migrate_LiveBook_Types_Book)

        Evergreen.V114.Types.CloneNotebook ->
            Evergreen.V115.Types.CloneNotebook

        Evergreen.V114.Types.PullNotebook ->
            Evergreen.V115.Types.PullNotebook

        Evergreen.V114.Types.ExportNotebook ->
            Evergreen.V115.Types.ExportNotebook

        Evergreen.V114.Types.SetShowNotebooksState p0 ->
            Evergreen.V115.Types.SetShowNotebooksState (p0 |> migrate_Types_ShowNotebooks)

        Evergreen.V114.Types.ImportRequested ->
            Evergreen.V115.Types.ImportRequested

        Evergreen.V114.Types.ImportSelected p0 ->
            Evergreen.V115.Types.ImportSelected p0

        Evergreen.V114.Types.ImportLoaded p0 ->
            Evergreen.V115.Types.ImportLoaded p0

        Evergreen.V114.Types.ChangePopup p0 ->
            Evergreen.V115.Types.ChangePopup (p0 |> migrate_Types_PopupState)

        Evergreen.V114.Types.GotViewport p0 ->
            Evergreen.V115.Types.GotViewport p0

        Evergreen.V114.Types.GotNewWindowDimensions p0 p1 ->
            Evergreen.V115.Types.GotNewWindowDimensions p0 p1

        Evergreen.V114.Types.SignUp ->
            Evergreen.V115.Types.SignUp

        Evergreen.V114.Types.SignIn ->
            Evergreen.V115.Types.SignIn

        Evergreen.V114.Types.SignOut ->
            Evergreen.V115.Types.SignOut

        Evergreen.V114.Types.SetSignupState p0 ->
            Evergreen.V115.Types.SetSignupState (p0 |> migrate_Types_SignupState)

        Evergreen.V114.Types.InputUsername p0 ->
            Evergreen.V115.Types.InputUsername p0

        Evergreen.V114.Types.InputSignupUsername p0 ->
            Evergreen.V115.Types.InputSignupUsername p0

        Evergreen.V114.Types.InputPassword p0 ->
            Evergreen.V115.Types.InputPassword p0

        Evergreen.V114.Types.InputPasswordAgain p0 ->
            Evergreen.V115.Types.InputPasswordAgain p0

        Evergreen.V114.Types.InputEmail p0 ->
            Evergreen.V115.Types.InputEmail p0

        Evergreen.V114.Types.InputTitle p0 ->
            Evergreen.V115.Types.InputTitle p0

        Evergreen.V114.Types.InputCloneReference p0 ->
            Evergreen.V115.Types.InputCloneReference p0

        Evergreen.V114.Types.AdminRunTask ->
            Evergreen.V115.Types.AdminRunTask

        Evergreen.V114.Types.GetUsers ->
            Evergreen.V115.Types.GetUsers


migrate_Types_Message : Evergreen.V114.Types.Message -> Evergreen.V115.Types.Message
migrate_Types_Message old =
    { txt = old.txt
    , status = old.status |> migrate_Types_MessageStatus
    }


migrate_Types_MessageStatus : Evergreen.V114.Types.MessageStatus -> Evergreen.V115.Types.MessageStatus
migrate_Types_MessageStatus old =
    case old of
        Evergreen.V114.Types.MSWhite ->
            Evergreen.V115.Types.MSWhite

        Evergreen.V114.Types.MSYellow ->
            Evergreen.V115.Types.MSYellow

        Evergreen.V114.Types.MSGreen ->
            Evergreen.V115.Types.MSGreen

        Evergreen.V114.Types.MSRed ->
            Evergreen.V115.Types.MSRed


migrate_Types_NoteBookDict : Evergreen.V114.Types.NoteBookDict -> Evergreen.V115.Types.NoteBookDict
migrate_Types_NoteBookDict old =
    old |> Dict.map (\k -> migrate_LiveBook_Types_Book)


migrate_Types_PopupState : Evergreen.V114.Types.PopupState -> Evergreen.V115.Types.PopupState
migrate_Types_PopupState old =
    case old of
        Evergreen.V114.Types.NoPopup ->
            Evergreen.V115.Types.NoPopup

        Evergreen.V114.Types.AdminPopup ->
            Evergreen.V115.Types.AdminPopup

        Evergreen.V114.Types.ManualPopup ->
            Evergreen.V115.Types.ManualPopup

        Evergreen.V114.Types.NewDataSetPopup ->
            Evergreen.V115.Types.NewDataSetPopup

        Evergreen.V114.Types.EditDataSetPopup p0 ->
            Evergreen.V115.Types.EditDataSetPopup (p0 |> migrate_LiveBook_DataSet_DataSetMetaData)

        Evergreen.V114.Types.SignUpPopup ->
            Evergreen.V115.Types.SignUpPopup

        Evergreen.V114.Types.NewNotebookPopup ->
            Evergreen.V115.Types.NewNotebookPopup

        Evergreen.V114.Types.StateEditorPopup ->
            Evergreen.V115.Types.StateEditorPopup

        Evergreen.V114.Types.ViewPublicDataSetsPopup ->
            Evergreen.V115.Types.ViewPublicDataSetsPopup

        Evergreen.V114.Types.ViewPrivateDataSetsPopup ->
            Evergreen.V115.Types.ViewPrivateDataSetsPopup


migrate_Types_ShowNotebooks : Evergreen.V114.Types.ShowNotebooks -> Evergreen.V115.Types.ShowNotebooks
migrate_Types_ShowNotebooks old =
    case old of
        Evergreen.V114.Types.ShowUserNotebooks ->
            Evergreen.V115.Types.ShowUserNotebooks

        Evergreen.V114.Types.ShowPublicNotebooks ->
            Evergreen.V115.Types.ShowPublicNotebooks


migrate_Types_SignupState : Evergreen.V114.Types.SignupState -> Evergreen.V115.Types.SignupState
migrate_Types_SignupState old =
    case old of
        Evergreen.V114.Types.ShowSignUpForm ->
            Evergreen.V115.Types.ShowSignUpForm

        Evergreen.V114.Types.HideSignUpForm ->
            Evergreen.V115.Types.HideSignUpForm


migrate_Types_ToBackend : Evergreen.V114.Types.ToBackend -> Evergreen.V115.Types.ToBackend
migrate_Types_ToBackend old =
    case old of
        Evergreen.V114.Types.NoOpToBackend ->
            Evergreen.V115.Types.NoOpToBackend

        Evergreen.V114.Types.GetRandomSeed ->
            Evergreen.V115.Types.GetRandomSeed

        Evergreen.V114.Types.RunTask ->
            Evergreen.V115.Types.RunTask

        Evergreen.V114.Types.SendUsers ->
            Evergreen.V115.Types.SendUsers

        Evergreen.V114.Types.DeleteDataSet p0 ->
            Evergreen.V115.Types.DeleteDataSet (p0 |> migrate_LiveBook_DataSet_DataSetMetaData)

        Evergreen.V114.Types.SaveDataSet p0 ->
            Evergreen.V115.Types.SaveDataSet (p0 |> migrate_LiveBook_DataSet_DataSetMetaData)

        Evergreen.V114.Types.GetListOfDataSets p0 ->
            Evergreen.V115.Types.GetListOfDataSets (p0 |> migrate_Types_DataSetDescription)

        Evergreen.V114.Types.CreateDataSet p0 ->
            Evergreen.V115.Types.CreateDataSet (p0 |> migrate_LiveBook_DataSet_DataSet)

        Evergreen.V114.Types.GetData p0 p1 p2 ->
            Evergreen.V115.Types.GetData p0 p1 p2

        Evergreen.V114.Types.GetDataSetForDownload p0 ->
            Evergreen.V115.Types.GetDataSetForDownload p0

        Evergreen.V114.Types.CreateNotebook p0 p1 ->
            Evergreen.V115.Types.CreateNotebook p0 p1

        Evergreen.V114.Types.ImportNewBook p0 p1 ->
            Evergreen.V115.Types.ImportNewBook p0 (p1 |> migrate_LiveBook_Types_Book)

        Evergreen.V114.Types.SaveNotebook p0 ->
            Evergreen.V115.Types.SaveNotebook (p0 |> migrate_LiveBook_Types_Book)

        Evergreen.V114.Types.DeleteNotebook p0 ->
            Evergreen.V115.Types.DeleteNotebook (p0 |> migrate_LiveBook_Types_Book)

        Evergreen.V114.Types.GetPublicNotebook p0 ->
            Evergreen.V115.Types.GetPublicNotebook p0

        Evergreen.V114.Types.GetClonedNotebook p0 p1 ->
            Evergreen.V115.Types.GetClonedNotebook p0 p1

        Evergreen.V114.Types.GetPulledNotebook p0 p1 p2 p3 ->
            Evergreen.V115.Types.GetPulledNotebook p0 p1 p2 p3

        Evergreen.V114.Types.UpdateSlugDict p0 ->
            Evergreen.V115.Types.UpdateSlugDict (p0 |> migrate_LiveBook_Types_Book)

        Evergreen.V114.Types.GetUsersNotebooks p0 ->
            Evergreen.V115.Types.GetUsersNotebooks p0

        Evergreen.V114.Types.GetPublicNotebooks p0 p1 ->
            Evergreen.V115.Types.GetPublicNotebooks (p0 |> Maybe.map migrate_LiveBook_Types_Book) p1

        Evergreen.V114.Types.SignUpBE p0 p1 p2 ->
            Evergreen.V115.Types.SignUpBE p0 p1 p2

        Evergreen.V114.Types.SignInBEDev ->
            Evergreen.V115.Types.SignInBEDev

        Evergreen.V114.Types.SignInBE p0 p1 ->
            Evergreen.V115.Types.SignInBE p0 p1

        Evergreen.V114.Types.SignOutBE p0 ->
            Evergreen.V115.Types.SignOutBE p0

        Evergreen.V114.Types.UpdateUserWith p0 ->
            Evergreen.V115.Types.UpdateUserWith (p0 |> migrate_User_User)


migrate_Types_ToFrontend : Evergreen.V114.Types.ToFrontend -> Evergreen.V115.Types.ToFrontend
migrate_Types_ToFrontend old =
    case old of
        Evergreen.V114.Types.NoOpToFrontend ->
            Evergreen.V115.Types.NoOpToFrontend

        Evergreen.V114.Types.MessageReceived p0 ->
            Evergreen.V115.Types.MessageReceived (p0 |> migrate_Types_Message)

        Evergreen.V114.Types.GotRandomSeed p0 ->
            Evergreen.V115.Types.GotRandomSeed p0

        Evergreen.V114.Types.GotUsers p0 ->
            Evergreen.V115.Types.GotUsers p0

        Evergreen.V114.Types.GotListOfPublicDataSets p0 ->
            Evergreen.V115.Types.GotListOfPublicDataSets p0

        Evergreen.V114.Types.GotListOfPrivateDataSets p0 ->
            Evergreen.V115.Types.GotListOfPrivateDataSets p0

        Evergreen.V114.Types.GotData p0 p1 p2 ->
            Evergreen.V115.Types.GotData p0 p1 (p2 |> migrate_LiveBook_DataSet_DataSet)

        Evergreen.V114.Types.GotDataForDownload p0 ->
            Evergreen.V115.Types.GotDataForDownload (p0 |> migrate_LiveBook_DataSet_DataSet)

        Evergreen.V114.Types.GotNotebook p0 ->
            Evergreen.V115.Types.GotNotebook (p0 |> migrate_LiveBook_Types_Book)

        Evergreen.V114.Types.GotPublicNotebook p0 ->
            Evergreen.V115.Types.GotPublicNotebook (p0 |> migrate_LiveBook_Types_Book)

        Evergreen.V114.Types.GotNotebooks p0 p1 ->
            Evergreen.V115.Types.GotNotebooks (p0 |> Maybe.map migrate_LiveBook_Types_Book)
                (p1 |> List.map migrate_LiveBook_Types_Book)

        Evergreen.V114.Types.SendMessage p0 ->
            Evergreen.V115.Types.SendMessage p0

        Evergreen.V114.Types.UserSignedIn p0 p1 ->
            Evergreen.V115.Types.UserSignedIn (p0 |> migrate_User_User) p1

        Evergreen.V114.Types.SendUser p0 ->
            Evergreen.V115.Types.SendUser (p0 |> migrate_User_User)


migrate_Types_UserToNoteBookDict : Evergreen.V114.Types.UserToNoteBookDict -> Evergreen.V115.Types.UserToNoteBookDict
migrate_Types_UserToNoteBookDict old =
    old |> Dict.map (\k -> migrate_Types_NoteBookDict)


migrate_User_User : Evergreen.V114.User.User -> Evergreen.V115.User.User
migrate_User_User old =
    old


migrate_Value_Env : Evergreen.V114.Value.Env -> Evergreen.V115.Value.Env
migrate_Value_Env old =
    { currentModule = old.currentModule
    , functions = old.functions |> migrate_FastDict_Dict identity (migrate_FastDict_Dict identity identity)
    , values = old.values |> migrate_Value_EnvValues
    , callStack = old.callStack
    }


migrate_Value_EnvValues : Evergreen.V114.Value.EnvValues -> Evergreen.V115.Value.EnvValues
migrate_Value_EnvValues old =
    old |> migrate_FastDict_Dict identity migrate_Value_Value


migrate_Value_Value : Evergreen.V114.Value.Value -> Evergreen.V115.Value.Value
migrate_Value_Value old =
    case old of
        Evergreen.V114.Value.String p0 ->
            Evergreen.V115.Value.String p0

        Evergreen.V114.Value.Int p0 ->
            Evergreen.V115.Value.Int p0

        Evergreen.V114.Value.Float p0 ->
            Evergreen.V115.Value.Float p0

        Evergreen.V114.Value.Char p0 ->
            Evergreen.V115.Value.Char p0

        Evergreen.V114.Value.Bool p0 ->
            Evergreen.V115.Value.Bool p0

        Evergreen.V114.Value.Unit ->
            Evergreen.V115.Value.Unit

        Evergreen.V114.Value.Tuple p0 p1 ->
            Evergreen.V115.Value.Tuple (p0 |> migrate_Value_Value)
                (p1 |> migrate_Value_Value)

        Evergreen.V114.Value.Triple p0 p1 p2 ->
            Evergreen.V115.Value.Triple (p0 |> migrate_Value_Value)
                (p1 |> migrate_Value_Value)
                (p2 |> migrate_Value_Value)

        Evergreen.V114.Value.Record p0 ->
            Evergreen.V115.Value.Record (p0 |> migrate_FastDict_Dict identity migrate_Value_Value)

        Evergreen.V114.Value.Custom p0 p1 ->
            Evergreen.V115.Value.Custom p0 (p1 |> List.map migrate_Value_Value)

        Evergreen.V114.Value.PartiallyApplied p0 p1 p2 p3 p4 ->
            Evergreen.V115.Value.PartiallyApplied (p0 |> migrate_Value_Env)
                (p1 |> List.map migrate_Value_Value)
                p2
                p3
                p4

        Evergreen.V114.Value.JsArray p0 ->
            Evergreen.V115.Value.JsArray (p0 |> Array.map migrate_Value_Value)

        Evergreen.V114.Value.List p0 ->
            Evergreen.V115.Value.List (p0 |> List.map migrate_Value_Value)
