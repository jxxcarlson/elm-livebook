module Evergreen.Migrate.V83 exposing (..)

{-| This migration file was automatically generated by the lamdera compiler.

It includes:

  - A migration for each of the 6 Lamdera core types that has changed
  - A function named `migrate_ModuleName_TypeName` for each changed/custom type

Expect to see:

  - `Unimplement–µd` values as placeholders wherever I was unable to figure out a clear migration path for you
  - `@NOTICE` comments for things you should know about, i.e. new custom type constructors that won't get any
    value mappings from the old type by default

You can edit this file however you wish! It won't be generated again.

See <https://dashboard.lamdera.com/docs/evergreen> for more info.

-}

import Array
import Dict
import Evergreen.V82.FastDict
import Evergreen.V82.Internal
import Evergreen.V82.LiveBook.DataSet
import Evergreen.V82.LiveBook.State
import Evergreen.V82.LiveBook.Types
import Evergreen.V82.Types
import Evergreen.V82.Value
import Evergreen.V83.FastDict
import Evergreen.V83.Internal
import Evergreen.V83.LiveBook.DataSet
import Evergreen.V83.LiveBook.State
import Evergreen.V83.LiveBook.Types
import Evergreen.V83.Types
import Evergreen.V83.Value
import Lamdera.Migrations exposing (..)
import List
import Value


frontendModel : Evergreen.V82.Types.FrontendModel -> ModelMigration Evergreen.V83.Types.FrontendModel Evergreen.V83.Types.FrontendMsg
frontendModel old =
    ModelMigrated ( migrate_Types_FrontendModel old, Cmd.none )


backendModel : Evergreen.V82.Types.BackendModel -> ModelMigration Evergreen.V83.Types.BackendModel Evergreen.V83.Types.BackendMsg
backendModel old =
    ModelUnchanged


frontendMsg : Evergreen.V82.Types.FrontendMsg -> MsgMigration Evergreen.V83.Types.FrontendMsg Evergreen.V83.Types.FrontendMsg
frontendMsg old =
    MsgUnchanged


toBackend : Evergreen.V82.Types.ToBackend -> MsgMigration Evergreen.V83.Types.ToBackend Evergreen.V83.Types.BackendMsg
toBackend old =
    MsgUnchanged


backendMsg : Evergreen.V82.Types.BackendMsg -> MsgMigration Evergreen.V83.Types.BackendMsg Evergreen.V83.Types.BackendMsg
backendMsg old =
    MsgUnchanged


toFrontend : Evergreen.V82.Types.ToFrontend -> MsgMigration Evergreen.V83.Types.ToFrontend Evergreen.V83.Types.FrontendMsg
toFrontend old =
    MsgUnchanged


migrate_Types_FrontendModel : Evergreen.V82.Types.FrontendModel -> Evergreen.V83.Types.FrontendModel
migrate_Types_FrontendModel old =
    { key = old.key
    , url = old.url
    , message = old.message
    , messages = old.messages |> List.map migrate_Types_Message
    , appState = old.appState |> migrate_Types_AppState
    , appMode = old.appMode |> migrate_Types_AppMode
    , currentTime = old.currentTime
    , tickCount = old.tickCount
    , clockState = old.clockState |> migrate_Types_ClockState
    , pressedKeys = old.pressedKeys
    , randomSeed = old.randomSeed
    , randomProbabilities = old.randomProbabilities
    , probabilityVectorLength = old.probabilityVectorLength
    , users = old.users
    , inputName = old.inputName
    , inputIdentifier = old.inputIdentifier
    , inputAuthor = old.inputAuthor
    , inputDescription = old.inputDescription
    , inputComments = old.inputComments
    , inputData = old.inputData
    , publicDataSetMetaDataList = old.publicDataSetMetaDataList
    , privateDataSetMetaDataList = old.privateDataSetMetaDataList
    , kvDict = old.kvDict
    , books = old.books |> List.map migrate_LiveBook_Types_Book
    , currentBook = old.currentBook |> migrate_LiveBook_Types_Book
    , cellContent = old.cellContent
    , currentCellIndex = old.currentCellIndex
    , cloneReference = old.cloneReference
    , deleteNotebookState = old.deleteNotebookState |> migrate_Types_DeleteNotebookState
    , showNotebooks = old.showNotebooks |> migrate_Types_ShowNotebooks
    , valueDict = old.valueDict |> Dict.map (\k -> migrate_Value_Value)
    , nextStateRecord = old.nextStateRecord
    , state = old.state |> migrate_LiveBook_State_MState
    , signupState = old.signupState |> migrate_Types_SignupState
    , currentUser = old.currentUser
    , inputUsername = old.inputUsername
    , inputSignupUsername = old.inputSignupUsername
    , inputEmail = old.inputEmail
    , inputRealname = old.inputRealname
    , inputPassword = old.inputPassword
    , inputPasswordAgain = old.inputPasswordAgain
    , inputTitle = old.inputTitle
    , windowWidth = old.windowWidth
    , windowHeight = old.windowHeight
    , popupState = old.popupState |> migrate_Types_PopupState
    , showEditor = old.showEditor
    }


migrate_FastDict_Dict : (k_old -> k_new) -> (v_old -> v_new) -> Evergreen.V82.FastDict.Dict k_old v_old -> Evergreen.V83.FastDict.Dict k_new v_new
migrate_FastDict_Dict migrate_k migrate_v old =
    old |> migrate_Internal_InternalDict migrate_k migrate_v


migrate_Internal_InnerDict : (k_old -> k_new) -> (v_old -> v_new) -> Evergreen.V82.Internal.InnerDict k_old v_old -> Evergreen.V83.Internal.InnerDict k_new v_new
migrate_Internal_InnerDict migrate_k migrate_v old =
    case old of
        Evergreen.V82.Internal.InnerNode p0 p1 p2 p3 p4 ->
            Evergreen.V83.Internal.InnerNode (p0 |> migrate_Internal_NColor)
                (p1 |> migrate_k)
                (p2 |> migrate_v)
                (p3 |> migrate_Internal_InnerDict migrate_k migrate_v)
                (p4 |> migrate_Internal_InnerDict migrate_k migrate_v)

        Evergreen.V82.Internal.Leaf ->
            Evergreen.V83.Internal.Leaf


migrate_Internal_InternalDict : (k_old -> k_new) -> (v_old -> v_new) -> Evergreen.V82.Internal.InternalDict k_old v_old -> Evergreen.V83.Internal.InternalDict k_new v_new
migrate_Internal_InternalDict migrate_k migrate_v old =
    case old of
        Evergreen.V82.Internal.Dict p0 p1 ->
            Evergreen.V83.Internal.Dict p0
                (p1 |> migrate_Internal_InnerDict migrate_k migrate_v)


migrate_Internal_NColor : Evergreen.V82.Internal.NColor -> Evergreen.V83.Internal.NColor
migrate_Internal_NColor old =
    case old of
        Evergreen.V82.Internal.Red ->
            Evergreen.V83.Internal.Red

        Evergreen.V82.Internal.Black ->
            Evergreen.V83.Internal.Black


migrate_LiveBook_DataSet_DataSetMetaData : Evergreen.V82.LiveBook.DataSet.DataSetMetaData -> Evergreen.V83.LiveBook.DataSet.DataSetMetaData
migrate_LiveBook_DataSet_DataSetMetaData old =
    old


migrate_LiveBook_State_MState : Evergreen.V82.LiveBook.State.MState -> Evergreen.V83.LiveBook.State.MState
migrate_LiveBook_State_MState old =
    { currentValue = Evergreen.V83.Value.Float 0
    , values = old.values |> List.map migrate_Value_Value
    , initialValue = Evergreen.V83.Value.Float 0
    , probabilities = old.probabilities
    , ticks = old.ticks
    , expression = old.expression
    , bindings = old.bindings
    }


migrate_LiveBook_Types_Book : Evergreen.V82.LiveBook.Types.Book -> Evergreen.V83.LiveBook.Types.Book
migrate_LiveBook_Types_Book old =
    { id = old.id
    , dirty = old.dirty
    , slug = old.slug
    , origin = old.origin
    , author = old.author
    , createdAt = old.createdAt
    , updatedAt = old.updatedAt
    , public = old.public
    , title = old.title
    , cells = old.cells |> List.map migrate_LiveBook_Types_Cell
    , currentIndex = old.currentIndex
    }


migrate_LiveBook_Types_Cell : Evergreen.V82.LiveBook.Types.Cell -> Evergreen.V83.LiveBook.Types.Cell
migrate_LiveBook_Types_Cell old =
    { index = old.index
    , text = old.text
    , bindings = old.bindings
    , expression = old.expression
    , value = old.value |> migrate_LiveBook_Types_CellValue
    , cellState = old.cellState |> migrate_LiveBook_Types_CellState
    , locked = old.locked
    }


migrate_LiveBook_Types_CellState : Evergreen.V82.LiveBook.Types.CellState -> Evergreen.V83.LiveBook.Types.CellState
migrate_LiveBook_Types_CellState old =
    case old of
        Evergreen.V82.LiveBook.Types.CSEdit ->
            Evergreen.V83.LiveBook.Types.CSEdit

        Evergreen.V82.LiveBook.Types.CSView ->
            Evergreen.V83.LiveBook.Types.CSView


migrate_LiveBook_Types_CellValue : Evergreen.V82.LiveBook.Types.CellValue -> Evergreen.V83.LiveBook.Types.CellValue
migrate_LiveBook_Types_CellValue old =
    case old of
        Evergreen.V82.LiveBook.Types.CVNone ->
            Evergreen.V83.LiveBook.Types.CVNone

        Evergreen.V82.LiveBook.Types.CVString p0 ->
            Evergreen.V83.LiveBook.Types.CVString p0

        Evergreen.V82.LiveBook.Types.CVVisual p0 p1 ->
            Evergreen.V83.LiveBook.Types.CVVisual (p0 |> migrate_LiveBook_Types_VisualType) p1

        Evergreen.V82.LiveBook.Types.CVPlot2D p0 p1 ->
            Evergreen.V83.LiveBook.Types.CVPlot2D p0 p1


migrate_LiveBook_Types_VisualType : Evergreen.V82.LiveBook.Types.VisualType -> Evergreen.V83.LiveBook.Types.VisualType
migrate_LiveBook_Types_VisualType old =
    case old of
        Evergreen.V82.LiveBook.Types.VTChart ->
            Evergreen.V83.LiveBook.Types.VTChart

        Evergreen.V82.LiveBook.Types.VTSvg ->
            Evergreen.V83.LiveBook.Types.VTSvg

        Evergreen.V82.LiveBook.Types.VTImage ->
            Evergreen.V83.LiveBook.Types.VTImage


migrate_Types_AppMode : Evergreen.V82.Types.AppMode -> Evergreen.V83.Types.AppMode
migrate_Types_AppMode old =
    case old of
        Evergreen.V82.Types.AMWorking ->
            Evergreen.V83.Types.AMWorking

        Evergreen.V82.Types.AMEditTitle ->
            Evergreen.V83.Types.AMEditTitle


migrate_Types_AppState : Evergreen.V82.Types.AppState -> Evergreen.V83.Types.AppState
migrate_Types_AppState old =
    case old of
        Evergreen.V82.Types.Loading ->
            Evergreen.V83.Types.Loading

        Evergreen.V82.Types.Loaded ->
            Evergreen.V83.Types.Loaded


migrate_Types_ClockState : Evergreen.V82.Types.ClockState -> Evergreen.V83.Types.ClockState
migrate_Types_ClockState old =
    case old of
        Evergreen.V82.Types.ClockRunning ->
            Evergreen.V83.Types.ClockRunning

        Evergreen.V82.Types.ClockStopped ->
            Evergreen.V83.Types.ClockStopped

        Evergreen.V82.Types.ClockPaused ->
            Evergreen.V83.Types.ClockPaused


migrate_Types_DeleteNotebookState : Evergreen.V82.Types.DeleteNotebookState -> Evergreen.V83.Types.DeleteNotebookState
migrate_Types_DeleteNotebookState old =
    case old of
        Evergreen.V82.Types.WaitingToDeleteNotebook ->
            Evergreen.V83.Types.WaitingToDeleteNotebook

        Evergreen.V82.Types.CanDeleteNotebook ->
            Evergreen.V83.Types.CanDeleteNotebook


migrate_Types_Message : Evergreen.V82.Types.Message -> Evergreen.V83.Types.Message
migrate_Types_Message old =
    { txt = old.txt
    , status = old.status |> migrate_Types_MessageStatus
    }


migrate_Types_MessageStatus : Evergreen.V82.Types.MessageStatus -> Evergreen.V83.Types.MessageStatus
migrate_Types_MessageStatus old =
    case old of
        Evergreen.V82.Types.MSWhite ->
            Evergreen.V83.Types.MSWhite

        Evergreen.V82.Types.MSYellow ->
            Evergreen.V83.Types.MSYellow

        Evergreen.V82.Types.MSGreen ->
            Evergreen.V83.Types.MSGreen

        Evergreen.V82.Types.MSRed ->
            Evergreen.V83.Types.MSRed


migrate_Types_PopupState : Evergreen.V82.Types.PopupState -> Evergreen.V83.Types.PopupState
migrate_Types_PopupState old =
    case old of
        Evergreen.V82.Types.NoPopup ->
            Evergreen.V83.Types.NoPopup

        Evergreen.V82.Types.AdminPopup ->
            Evergreen.V83.Types.AdminPopup

        Evergreen.V82.Types.ManualPopup ->
            Evergreen.V83.Types.ManualPopup

        Evergreen.V82.Types.NewDataSetPopup ->
            Evergreen.V83.Types.NewDataSetPopup

        Evergreen.V82.Types.EditDataSetPopup p0 ->
            Evergreen.V83.Types.EditDataSetPopup (p0 |> migrate_LiveBook_DataSet_DataSetMetaData)

        Evergreen.V82.Types.SignUpPopup ->
            Evergreen.V83.Types.SignUpPopup

        Evergreen.V82.Types.NewNotebookPopup ->
            Evergreen.V83.Types.NewNotebookPopup

        Evergreen.V82.Types.ViewPublicDataSetsPopup ->
            Evergreen.V83.Types.ViewPublicDataSetsPopup

        Evergreen.V82.Types.ViewPrivateDataSetsPopup ->
            Evergreen.V83.Types.ViewPrivateDataSetsPopup


migrate_Types_ShowNotebooks : Evergreen.V82.Types.ShowNotebooks -> Evergreen.V83.Types.ShowNotebooks
migrate_Types_ShowNotebooks old =
    case old of
        Evergreen.V82.Types.ShowUserNotebooks ->
            Evergreen.V83.Types.ShowUserNotebooks

        Evergreen.V82.Types.ShowPublicNotebooks ->
            Evergreen.V83.Types.ShowPublicNotebooks


migrate_Types_SignupState : Evergreen.V82.Types.SignupState -> Evergreen.V83.Types.SignupState
migrate_Types_SignupState old =
    case old of
        Evergreen.V82.Types.ShowSignUpForm ->
            Evergreen.V83.Types.ShowSignUpForm

        Evergreen.V82.Types.HideSignUpForm ->
            Evergreen.V83.Types.HideSignUpForm


migrate_Value_Env : Evergreen.V82.Value.Env -> Evergreen.V83.Value.Env
migrate_Value_Env old =
    { currentModule = old.currentModule
    , functions = old.functions |> migrate_FastDict_Dict identity (migrate_FastDict_Dict identity identity)
    , values = old.values |> migrate_Value_EnvValues
    , callStack = old.callStack
    }


migrate_Value_EnvValues : Evergreen.V82.Value.EnvValues -> Evergreen.V83.Value.EnvValues
migrate_Value_EnvValues old =
    old |> migrate_FastDict_Dict identity migrate_Value_Value


migrate_Value_Value : Evergreen.V82.Value.Value -> Evergreen.V83.Value.Value
migrate_Value_Value old =
    case old of
        Evergreen.V82.Value.String p0 ->
            Evergreen.V83.Value.String p0

        Evergreen.V82.Value.Int p0 ->
            Evergreen.V83.Value.Int p0

        Evergreen.V82.Value.Float p0 ->
            Evergreen.V83.Value.Float p0

        Evergreen.V82.Value.Char p0 ->
            Evergreen.V83.Value.Char p0

        Evergreen.V82.Value.Bool p0 ->
            Evergreen.V83.Value.Bool p0

        Evergreen.V82.Value.Unit ->
            Evergreen.V83.Value.Unit

        Evergreen.V82.Value.Tuple p0 p1 ->
            Evergreen.V83.Value.Tuple (p0 |> migrate_Value_Value)
                (p1 |> migrate_Value_Value)

        Evergreen.V82.Value.Triple p0 p1 p2 ->
            Evergreen.V83.Value.Triple (p0 |> migrate_Value_Value)
                (p1 |> migrate_Value_Value)
                (p2 |> migrate_Value_Value)

        Evergreen.V82.Value.Record p0 ->
            Evergreen.V83.Value.Record (p0 |> migrate_FastDict_Dict identity migrate_Value_Value)

        Evergreen.V82.Value.Custom p0 p1 ->
            Evergreen.V83.Value.Custom p0 (p1 |> List.map migrate_Value_Value)

        Evergreen.V82.Value.PartiallyApplied p0 p1 p2 p3 p4 ->
            Evergreen.V83.Value.PartiallyApplied (p0 |> migrate_Value_Env)
                (p1 |> List.map migrate_Value_Value)
                p2
                p3
                p4

        Evergreen.V82.Value.JsArray p0 ->
            Evergreen.V83.Value.JsArray (p0 |> Array.map migrate_Value_Value)

        Evergreen.V82.Value.List p0 ->
            Evergreen.V83.Value.List (p0 |> List.map migrate_Value_Value)
